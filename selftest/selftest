#!/usr/bin/env python

# Test every patch from files folder and output error on failure
#
# Copyright (C) 2016 Intel Corporation
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

import os
from os.path import join, dirname, abspath
from subprocess import check_output, STDOUT

currentdir = dirname(abspath(__file__))
patchesdir = join(currentdir, 'files')
testsdir   = join(dirname(currentdir), 'tests')

def test(root, patch):
    res = True
    patchpath = abspath(join(root, patch))

    a               = patch.split('.')
    klass, testname = a[0], a[1]
    expected_result = a[-1]
    testid          = ".%s.%s" % (klass,testname)

    cmd     = 'patchtest %s --test-dir %s --no-apply' % (patchpath,testsdir)
    results = check_output(cmd, stderr=STDOUT, shell=True)

    for resultline in results.splitlines():
        if testid in resultline:
            result, _ = resultline.split()
            if result.lower() != expected_result.lower():
                print 'patch=%s expected=%s actual=%s cmd=%s' % (patch, expected_result.lower(), result.lower(), cmd)
            break
    else:
        print "No test for=%s" % patch

if __name__ == '__main__':
    for root, dirs, patches in os.walk(patchesdir):
        for patch in patches:
            test(root, patch)
