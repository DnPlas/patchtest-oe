#!/usr/bin/env python

#
# From the selftest/files folder, takes each patch (containing the test id
# and expected result), run patchtest and compares output (expected versus
# actual result). In case results do not match, print the test id
#

import os
from os.path import join, dirname, abspath
from subprocess import check_output, STDOUT

currentdir = dirname(abspath(__file__))
patchesdir = join(currentdir, 'files')
testsdir   = join(dirname(currentdir), 'tests')

def test(root, patch):
    res = True
    patchpath = abspath(join(root, patch))

    a               = patch.split('.')
    klass, testname = a[0], a[1]
    expected_result = a[-1]
    testid          = ".%s.%s" % (klass,testname)

    cmd     = 'patchtest %s --test-dir %s --no-apply' % (patchpath,testsdir)
    results = check_output(cmd, stderr=STDOUT, shell=True)

    for resultline in results.splitlines():
        if testid in resultline:
            result, _ = resultline.split()
            if result.lower() != expected_result.lower():
                print 'patch=%s expected=%s actual=%s cmd=%s' % (patch, expected_result.lower(), result.lower(), cmd)
            break
    else:
        print "No test for=%s" % patch

if __name__ == '__main__':
    for root, dirs, patches in os.walk(patchesdir):
        for patch in patches:
            test(root, patch)
