#!/usr/bin/env python

from argparse import ArgumentParser
from sys import exit
from json import loads
from subprocess import check_output, CalledProcessError
from os.path import exists, join

def pollseries(repodir, pwproject):
    listseries = []
    cmd        = 'cd %s;git pw poll-events --name series-new-revision' % repodir
    timestamp  = '.git-pw.%s.poll.timestamp' % pwproject

    if exists(join(repodir, timestamp)):
        events = check_output(cmd, shell=True)
        for event in events.splitlines():
            series = loads(event)
            listseries.append(series['series'])
    else:
        # just consume all events
        while check_output(cmd, shell=True):
            pass

    return ' '.join([str(s) for s in listseries])

if __name__ == '__main__':

    parser = ArgumentParser(description="""Poll and print latest series. If timestamp not present it polls all series and no series are printed""")

    parser.add_argument('repodir',
                        help='Repository where polling is done')

    parser.add_argument('--project',
                        dest='project',
                        default='oe-core',
                        help='Patchwork\'s project name')

    args = parser.parse_args()

    ret = 1
    try:
        print pollseries(args.repodir, args.project)
        ret = 0
    except CalledProcessError as cpe:
        print 'make sure you have patchwork git-pw installed'
    except:
        import traceback
        traceback.print_exc(5)

    exit(ret)

