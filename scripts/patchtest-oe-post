#!/bin/bash -eu
# ex:ts=4:sw=4:sts=4:et
# -*- tab-width: 4; c-basic-offset: 4; indent-tabs-mode: nil -*-
#
# patchtest-oe-post: Poll, test and post results to a Patchwork instance.
#
# Copyright (C) 2016 Intel Corporation
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

function usage() {
    echo -e "\$ $0 -r <repodir> -t <testdir> -R <resultsdir>"
    exit 1
}

#Check the number of arguments
NUMARGS=$#
if [ ! $NUMARGS -eq 6 ]; then
    usage
fi

while getopts ":r:t:R:h" opt; do
    case $opt in
	r)
	    repodir=$OPTARG
	    ;;
	t)
	    testdir=$OPTARG
	    ;;
	R)
	    resultsdir=$OPTARG
	    ;;
	h)
	    usage
	    ;;
	\?)
	    echo "Invalid option: -$OPTARG" >&2
	    usage
	    ;;
	:)
	    echo "Option -$OPTARG requires an argument." >&2
	    usage
	    ;;
    esac
done

[ ! -d ${resultsdir} ] && { mkdir -p ${resultsdir}; }

newseries="$(patchtest-oe-poll-series ${repodir})"

failure="failure"
success="success"
testname="patchtest"

for seriesrev in ${newseries}; do

    series="$(echo $seriesrev | cut -d. -f1)"
    revision="$(echo $seriesrev | cut -d. -f2)"

    rawsummary="${resultsdir}/${series}.${revision}.raw.summary"
    finalsummary="${resultsdir}/${series}.${revision}.summary"

    # test the patch and store the raw summary
    ( cd ${repodir}; git pw mbox ${series} -r ${revision} | \
	patchtest - \
	    -C         $repodir \
	    --test-dir $testdir \
	    --json \
    ) >  $rawsummary

    # create the final summary
    if [ "$(cat ${rawsummary} | patchtest-oe-any-fail)" == "yes" ]; then
	cat ${rawsummary} | grep '"status": "FAIL"' | patchtest-oe-summary > ${finalsummary}
	result=$failure
    else
	# produce the summary to be post to patchwork
	cat ${rawsummary} | patchtest-oe-summary > ${finalsummary}
	result=$success
    fi

    # Post results
    ( cd ${repodir}; git pw post-result \
	$series \
	$testname \
	$result \
	--revision ${revision} \
	--summary-from-file ${finalsummary} \
    )

    echo "Tested Series: ${series}. Result: ${result}."
done
